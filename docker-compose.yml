version: '3.8'

services:
  postgres:
    image: postgres:16-alpine
    container_name: servicepro-postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_DB: servicepro
    ports:
      - '5432:5432'
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U postgres']
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    container_name: servicepro-redis
    ports:
      - '6379:6379'
    volumes:
      - redis_data:/data
    healthcheck:
      test: ['CMD', 'redis-cli', 'ping']
      interval: 10s
      timeout: 5s
      retries: 5

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: servicepro-backend
    ports:
      - '8080:8080'
    environment:
      - DATABASE_URL=postgresql://postgres:password@postgres:5432/servicepro?sslmode=disable
      - REDIS_URL=redis://redis:6379
      - PORT=8080
      - ENV=development
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - ./backend:/app
    command: go run cmd/api/main.go

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: servicepro-frontend
    ports:
      - '5173:5173'
    environment:
      - VITE_API_URL=http://localhost:8080/api
      - VITE_WS_URL=ws://localhost:8080/ws
    depends_on:
      - backend
    volumes:
      - ./frontend:/app
      - /app/node_modules
    command: npm run dev

volumes:
  postgres_data:
  redis_data:
